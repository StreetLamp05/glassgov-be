"""governance tables, civic tables, and enums

Revision ID: 261d4a0f518d
Revises: 01ad991fe2f9
Create Date: 2025-10-26 00:50:05.025507

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '261d4a0f518d'
down_revision = '01ad991fe2f9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('citizen_posts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=280), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('food_access', 'road_safety', 'crime', 'housing', 'zoning', 'transport', 'budget', 'health', name='category'), nullable=False),
    sa.Column('city', sa.String(length=120), nullable=False),
    sa.Column('county', sa.String(length=120), nullable=True),
    sa.Column('state_name', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['state_name'], ['states.state_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_context',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('county', sa.String(length=120), nullable=True),
    sa.Column('state_name', sa.String(length=50), nullable=False),
    sa.Column('zipcode', sa.String(length=10), nullable=True),
    sa.Column('crime_index_12mo', sa.Numeric(), nullable=True),
    sa.Column('median_rent_usd', sa.Integer(), nullable=True),
    sa.Column('median_income_usd', sa.Integer(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('percent_poverty', sa.Numeric(), nullable=True),
    sa.Column('as_of', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['state_name'], ['states.state_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jurisdictions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('level', sa.Enum('city', 'county', 'state', name='jurisdiction_level'), nullable=False),
    sa.Column('state_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['state_name'], ['states.state_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bodies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jurisdiction_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('branch', sa.Enum('legislative', 'executive', 'judicial', name='branch'), nullable=False),
    sa.Column('body_type', sa.Enum('council', 'committee', 'department', 'board', 'agency', 'mayor', name='body_type'), nullable=False),
    sa.Column('slug', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['jurisdiction_id'], ['jurisdictions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('post_votes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('vote', sa.Enum('up', 'down', name='vote_type'), nullable=False),
    sa.Column('voter_token_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['citizen_posts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('post_id', 'voter_token_hash', name='uq_post_vote_once_per_token')
    )
    with op.batch_alter_table('post_votes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_votes_voter_token_hash'), ['voter_token_hash'], unique=False)

    op.create_table('districts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('body_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('code', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['body_id'], ['bodies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('body_id', sa.UUID(), nullable=False),
    sa.Column('source_type', sa.Enum('council_file', 'bill', 'agenda', 'minutes', 'vote_roll', 'executive_order', 'press_release', 'report', 'budget', 'lawsuit_docket', 'election_notice', name='source_type'), nullable=False),
    sa.Column('external_id', sa.String(length=120), nullable=True),
    sa.Column('title', sa.String(length=400), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=80), nullable=True),
    sa.Column('meeting_datetime', sa.DateTime(), nullable=True),
    sa.Column('url', sa.String(length=600), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('raw', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['body_id'], ['bodies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('body_id', 'source_type', 'external_id', name='uq_source_body_type_ext')
    )
    op.create_table('issue_topic_matches',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('method', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['citizen_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meetings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('body_id', sa.UUID(), nullable=False),
    sa.Column('meeting_datetime', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('agenda_source_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['agenda_source_id'], ['sources.id'], ),
    sa.ForeignKeyConstraint(['body_id'], ['bodies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('officials',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('body_id', sa.UUID(), nullable=False),
    sa.Column('district_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('role', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=40), nullable=True),
    sa.Column('email', sa.String(length=160), nullable=True),
    sa.Column('next_meeting', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['body_id'], ['bodies.id'], ),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agenda_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('item_number', sa.String(length=40), nullable=True),
    sa.Column('title', sa.String(length=400), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('related_source_id', sa.UUID(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], ),
    sa.ForeignKeyConstraint(['related_source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('agenda_items')
    op.drop_table('officials')
    op.drop_table('meetings')
    op.drop_table('issue_topic_matches')
    op.drop_table('sources')
    op.drop_table('districts')
    with op.batch_alter_table('post_votes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_votes_voter_token_hash'))

    op.drop_table('post_votes')
    op.drop_table('bodies')
    op.drop_table('jurisdictions')
    op.drop_table('geo_context')
    op.drop_table('citizen_posts')
    # ### end Alembic commands ###
